from aiogram.types import (
    KeyboardButton,
    ReplyKeyboardMarkup,
)


def create_start_keyboard(is_admin: bool) -> ReplyKeyboardMarkup:
    # –û—Å–Ω–æ–≤–Ω—ñ –∫–Ω–æ–ø–∫–∏, —è–∫—ñ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—é—Ç—å—Å—è –¥–ª—è –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    buttons = [
        [KeyboardButton(text="ü§µ –ü—Ä–æ—Ñ—ñ–ª—å")],
        [KeyboardButton(text="üöÄ –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–æ–∫")],
        [
            KeyboardButton(text="üßë‚Äçüíª –ü—ñ–¥—Ç—Ä–∏–º–∫–∞"),
            KeyboardButton(text="üîò Whitelist"),
        ],
    ]

    # –î–æ–¥–∞—Ç–∫–æ–≤–∞ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if is_admin:
        buttons.append([KeyboardButton(text="üí† –ó–º—ñ–Ω–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å")])

    return ReplyKeyboardMarkup(
        keyboard=buttons,
        resize_keyboard=True,
        input_field_placeholder="üëá –ù–∞—Ç–∏—Å–∫–∞–π—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏",
        selective=True,
    )


cancel_button = ReplyKeyboardMarkup(
    keyboard=[
        [
            KeyboardButton(
                text="‚ùå –í—ñ–¥–º—ñ–Ω–∏—Ç–∏",
            ),
        ],
    ],
    resize_keyboard=True,
    input_field_placeholder="üëá –í–≤–µ–¥—ñ—Ç—å ID –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É, —â–æ–± –≤—ñ–¥–º—ñ–Ω–∏—Ç–∏",
    selective=True,
)

change_status_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [
            KeyboardButton(
                text="demo",
            ),
        ],
        [
            KeyboardButton(
                text="unlim",
            ),
        ],
        [
            KeyboardButton(
                text="admin",
            ),
        ],
        [
            KeyboardButton(
                text="‚ùå –í—ñ–¥–º—ñ–Ω–∏—Ç–∏",
            ),
        ],
    ],
    resize_keyboard=True,
    input_field_placeholder="üëá –í–≤–µ–¥—ñ—Ç—å ID –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É, —â–æ–± –≤—ñ–¥–º—ñ–Ω–∏—Ç–∏",
    selective=True,
)

whitelist_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [
            KeyboardButton(
                text="–î–æ–¥–∞—Ç–∏ –¥–æ–º–µ–Ω",
            ),
        ],
        [
            KeyboardButton(
                text="–°–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω—ñ–≤",
            ),
        ],
        [
            KeyboardButton(
                text="–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é",
            ),
        ],
    ],
    resize_keyboard=True,
    input_field_placeholder="üëá –ù–∞—Ç–∏—Å–∫–∞–π—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏",
    one_time_keyboard=True,
)

return_white_list_menu_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [
            KeyboardButton(
                text="–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥",
            ),
        ],
    ],
    resize_keyboard=True,
    one_time_keyboard=True,
    selective=True,
)


def generate_domain_keyboard(domains: list[str]) -> ReplyKeyboardMarkup:
    """–°—Ç–≤–æ—Ä—é—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –¥–æ–º–µ–Ω—ñ–≤ –∑ whitelist."""
    domain_buttons = [[KeyboardButton(text=domain)] for domain in domains]
    domain_buttons.append([KeyboardButton(text="–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞–∑–∞–¥")])

    return ReplyKeyboardMarkup(
        keyboard=domain_buttons,
        resize_keyboard=True,
        one_time_keyboard=True,
        selective=True,
    )


applications_main_menu_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [
            KeyboardButton(
                text="–ó–∞–ø—É—Å—Ç–∏—Ç–∏ –≤—ñ–¥–ø—Ä–∞–≤–∫—É üöÄ",
            ),
        ],
        [
            KeyboardButton(
                text="–ê–∫—Ç–∏–≤–Ω—ñ —Å–µ—Å—ñ—ó üïú",
            ),
        ],
        [
            KeyboardButton(
                text="–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é",
            ),
        ],
    ],
    resize_keyboard=True,
    input_field_placeholder="üëá –ù–∞—Ç–∏—Å–∫–∞–π—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏",
    one_time_keyboard=True,
    selective=True,
)

applications_start_cancel_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [
            KeyboardButton(
                text="–°–∫–∞—Å—É–≤–∞—Ç–∏ –≤—ñ–¥–ø—Ä–∞–≤–∫—É ‚ùå",
            ),
        ],
        [
            KeyboardButton(
                text="–í –º–µ–Ω—é –∑–∞—è–≤–æ–∫",
            ),
        ],
    ],
    resize_keyboard=True,
    input_field_placeholder="üëá –ù–∞—Ç–∏—Å–∫–∞–π—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏",
    one_time_keyboard=True,
    selective=True,
)

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤–∏–±–æ—Ä—É —á–∞—Å—Ç–æ—Ç–∏
frequency_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [
            KeyboardButton(
                text="–ë–µ–∑ –∑–∞—Ç—Ä–∏–º–∫–∏ üöÄ",
            ),
        ],
        [
            KeyboardButton(
                text="1 –∑–∞—è–≤–∫–∞ –≤ 10 —Å–µ–∫—É–Ω–¥ ‚è≥",
            ),
        ],
        [
            KeyboardButton(
                text="1 –∑–∞—è–≤–∫–∞ –≤ 10 —Ö–≤–∏–ª–∏–Ω ‚åõ",
            ),
        ],
        [
            KeyboardButton(
                text="1 –∑–∞—è–≤–∫–∞ –≤ 60 —Ö–≤–∏–ª–∏–Ω ‚åõ",
            ),
        ],
        [
            KeyboardButton(
                text="–°–∫–∞—Å—É–≤–∞—Ç–∏ –≤—ñ–¥–ø—Ä–∞–≤–∫—É ‚ùå",
            ),
        ],
    ],
    resize_keyboard=True,
    one_time_keyboard=True,
    selective=True,
)


def create_duration_keyboard(is_admin: bool = False) -> ReplyKeyboardMarkup:
    keyboard = [
        [
            KeyboardButton(
                text="1 —Ö–≤–∏–ª–∏–Ω–∞ ‚è≥",
            ),
        ],
        [
            KeyboardButton(
                text="15 —Ö–≤–∏–ª–∏–Ω ‚è≥",
            ),
        ],
        [
            KeyboardButton(
                text="30 —Ö–≤–∏–ª–∏–Ω ‚è≥",
            ),
        ],
        [
            KeyboardButton(
                text="1 –≥–æ–¥–∏–Ω–∞ ‚è≥",
            ),
        ],
        [
            KeyboardButton(
                text="3 –≥–æ–¥–∏–Ω–∏ ‚è≥",
            ),
        ],
        [
            KeyboardButton(
                text="–°–∫–∞—Å—É–≤–∞—Ç–∏ –≤—ñ–¥–ø—Ä–∞–≤–∫—É ‚ùå",
            ),
        ],
    ]
    if is_admin:
        keyboard.append(
            [
                KeyboardButton(
                    text="–ù–µ–æ–±–º–µ–∂–µ–Ω–æ ‚è≥",
                ),
            ],
        )
    return ReplyKeyboardMarkup(
        keyboard=keyboard,
        resize_keyboard=True,
        one_time_keyboard=True,
    )
